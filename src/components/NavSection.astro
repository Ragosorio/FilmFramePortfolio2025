---
import Container from "@/components/Container.astro";

interface Menu {
  label: string;
  href: string;
  external?: boolean;
}

const leftmenu: Menu[] = [
  {
    label: "Home",
    href: "/",
  },
  {
    label: "About",
    href: "/#about",
  },
  {
    label: "Contact",
    href: "/#contact",
  },
];

const rightmenu: Menu[] = [
  {
    label: "Services",
    href: "/#services",
  },
  {
    label: "Gallery",
    href: "/#gallery",
  },
  {
    label: "Blog",
    href: "/blog",
  },
];

const mobilemenu: Menu[] = [...leftmenu, ...rightmenu];

const isHomePage = Astro.url.pathname === "/";
---

<style>
  .loading-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    opacity: 1;
    transition: opacity 0.8s ease-out;
  }

  .loading-screen.fade-out {
    opacity: 0;
    pointer-events: none;
  }

  .loading-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1.25rem;
  }

  .loading-logo {
    width: 45rem;
    max-width: 90vw;
    transition: all 1.5s cubic-bezier(0.25, 0.1, 0.25, 1);
    transform-origin: center center;
    position: relative;
    z-index: 10001;
  }

  .loading-logo.moving {
    position: fixed;
    z-index: 10002;
  }

  .loading-text {
    transition: opacity 1s ease-out;
    opacity: 1;
    position: relative;
    z-index: 10000;
    margin-top: 0;
  }

  .loading-text.fade-out {
    opacity: 0;
  }

  .loading-text.hidden {
    display: none;
  }

  .nav-logo {
    opacity: 0;
    transition: opacity 0.5s ease-in;
  }

  .nav-logo.show {
    opacity: 1;
  }

  .nav-container {
    opacity: 0;
    transform: translateY(0);
    transition: all 0.6s ease-out;
  }

  .nav-container.show {
    opacity: 1;
    transform: translateY(0);
  }

  .home-page .nav-container {
    opacity: 0;
  }

  .nav-logo-placeholder {
    opacity: 0;
    transition: opacity 0.3s ease-in;
  }

  .nav-logo-placeholder.show {
    opacity: 1;
  }

  @media (max-width: 768px) {
    .loading-logo {
      width: 20rem;
    }
  }
</style>

{
  isHomePage && (
    <div id="loading-screen" class="loading-screen">
      <div class="loading-content">
        <img
          src="/images/logo.webp"
          alt="Logo FilmFrame"
          class="loading-logo"
          id="loading-logo"
        />
        <p class="loading-text uppercase font-bold font-Seasons text-xl md:text-4xl text-[#d3b59e]" id="loading-text">
          stories that{" "}
          <span class="text-[#d3b59e] font-extrabold">last forever</span>
        </p>
      </div>
    </div>
  )
}

<Container>
  <nav
    class={`nav-container ${isHomePage ? "home-page" : "show"}`}
    id="nav-container"
  >
    <div class="flex flex-wrap justify-between md:gap-10 md:flex-nowrap">
      <div
        class="flex-col items-center justify-start order-1 hidden w-full md:flex md:flex-row md:justify-end md:w-auto md:order-none md:flex-1"
      >
        {
          leftmenu.map((item) => (
            <a
              href={item.href}
              class="px-5 py-2 text-sm font-medium text-detalles3 hover:text-detalles1 transition delay-150 duration-300"
            >
              {item.label}
            </a>
          ))
        }
      </div>

      <div class="flex items-center justify-between w-full md:w-auto">
        <a class="md:w-72 w-52" href="/" id="nav-logo-container">
          <img
            src="/images/logo.webp"
            alt="Logo FilmFrame"
            class={`nav-logo-placeholder ${!isHomePage ? "show" : ""}`}
            id="nav-logo"
          />
        </a>

        <button
          id="menu"
          aria-label="Toggle Menu"
          class="px-2 py-1 ml-auto text-gray-500 rounded-md md:hidden focus:text-detalles1 transition delay-150 duration-300 focus:outline-none"
        >
          <svg
            class="w-6 h-6 fill-current"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              class="navmenu-toggle"
              fill-rule="evenodd"
              d="M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z"
            ></path>

            <path
              class="navmenu-toggle hidden"
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z"
            ></path>
          </svg>
        </button>
      </div>

      <div
        class="flex-col items-center justify-start order-2 hidden w-full md:flex md:flex-row md:w-auto md:flex-1 md:order-none"
      >
        {
          rightmenu.map((item) => (
            <a
              href={item.href}
              class="px-5 py-2 text-sm font-medium text-detalles3 hover:text-detalles1 transition delay-150 duration-300"
            >
              {item.label}
            </a>
          ))
        }
      </div>
    </div>

    <div class="navmenu-toggle hidden">
      <div
        class="flex flex-col items-center justify-start order-2 w-full md:hidden"
      >
        {
          mobilemenu.map((item, index) => (
            <a
              href={item.href}
              class="px-5 py-2 text-sm font-medium text-detalles3 hover:text-detalles1 transition delay-150 duration-300"
              target={item.external ? "_blank" : ""}
              rel={item.external ? "noopener" : ""}
            >
              {item.label}
            </a>
          ))
        }
      </div>
    </div>
  </nav>
</Container>

<script is:inline>
  function handleLoadingAnimation() {
    const loadingScreen = document.getElementById("loading-screen");
    const navContainer = document.getElementById("nav-container");
    const navLogo = document.getElementById("nav-logo");
    const navLogoContainer = document.getElementById("nav-logo-container");
    const loadingLogo = document.getElementById("loading-logo");
    const loadingText = document.getElementById("loading-text");

    if (loadingScreen && loadingLogo && navLogoContainer && loadingText) {
      setTimeout(() => {
        navContainer.classList.add("show");

        loadingText.classList.add("fade-out");

        setTimeout(() => {
          const navRect = navLogoContainer.getBoundingClientRect();
          const loadingRect = loadingLogo.getBoundingClientRect();

          loadingLogo.style.position = "fixed";
          loadingLogo.style.top = loadingRect.top + "px";
          loadingLogo.style.left = loadingRect.left + "px";
          loadingLogo.style.width = loadingRect.width + "px";
          loadingLogo.style.height = loadingRect.height + "px";

          loadingText.classList.add("hidden");

          const deltaX =
            navRect.left +
            navRect.width / 2 -
            (loadingRect.left + loadingRect.width / 2);
          const deltaY =
            navRect.top +
            navRect.height / 2 -
            (loadingRect.top + loadingRect.height / 2);

          const finalScale = navRect.width / loadingRect.width;

          loadingLogo.classList.add("moving");
          
          requestAnimationFrame(() => {
            loadingLogo.style.transform = `translate(${deltaX}px, ${deltaY}px) scale(${finalScale})`;
          });

          setTimeout(() => {
            // Mostrar el logo del nav justo antes de que termine la animaciÃ³n
            if (navLogo) {
              navLogo.classList.add("show");
            }
            
            setTimeout(() => {
              loadingScreen.classList.add("fade-out");

              setTimeout(() => {
                loadingScreen.remove();
              }, 800);
            }, 100);
          }, 1400);
        }, 1000);
      }, 1000);
    }
  }

  function handleMobileMenu() {
    const menuButton = document.getElementById("menu");
    if (menuButton) {
      menuButton.addEventListener("click", () => {
        [...document.querySelectorAll(".navmenu-toggle")].forEach((Element) => {
          Element.classList.toggle("hidden");
        });
      });
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    handleLoadingAnimation();
    handleMobileMenu();
  });

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", () => {
      handleLoadingAnimation();
      handleMobileMenu();
    });
  } else {
    handleLoadingAnimation();
    handleMobileMenu();
  }
</script>